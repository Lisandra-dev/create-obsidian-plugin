import {Plugin} from "obsidian";
import {<%= plugin.className %>SettingsTab} from "./settings";
import {<%= plugin.className %>Settings, DEFAULT_SETTINGS} from "./interface";
import {<%= plugin.className %>Modals} from "./modals";
<%- translation.import %>


export default class <%= plugin.className %> extends Plugin {
  settings: <%= plugin.className %>Settings;

  async onload() {
    console.log(`<%= plugin.className %> v.${this.manifest.version} (lang: ${translationLanguage}) loaded.`);
    <%- translation.init %>

    await this.loadSettings();
    this.addSettingTab(new <%= plugin.className %>SettingsTab(this.app, this));

    this.addCommand({
      id: "open-<%= plugin.className %>-modal",
      name: "Open <%= plugin.className %> Modal",
      callback: () => {
        new <%= plugin.className %>Modals(this.app, this).open();
      },
    });

  }

  onunload() {
    console.log(`<%= plugin.className %> v.${this.manifest.version} (lang: ${translationLanguage}) unloaded.`);
  }

  async loadSettings() {
    this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());
  }

  async saveSettings() {
    await this.saveData(this.settings);
  }
}



